name: Deploy to EC2

on:
  push:
    branches:
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
          APP_DIR: /var/www/backend
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          JWT_ACCESS_SECRET: ${{ secrets.JWT_ACCESS_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
        run: |
          echo "${KEY}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST "
            export DATABASE_URL='${DATABASE_URL}' &&
            export AWS_ACCESS_KEY_ID='${AWS_ACCESS_KEY_ID}' &&
            export AWS_SECRET_ACCESS_KEY='${AWS_SECRET_ACCESS_KEY}' &&
            export EMAIL_USER='${EMAIL_USER}' &&
            export EMAIL_PASS='${EMAIL_PASS}' &&
            export JWT_ACCESS_SECRET='${JWT_ACCESS_SECRET}' &&
            export JWT_REFRESH_SECRET='${JWT_REFRESH_SECRET}' &&
            cd $APP_DIR &&
            git stash &&
            git fetch origin &&
            git checkout prod &&
            git pull origin prod &&
            git config pull.rebase false &&
            npm install && # 의존성 설치
            npx prisma db push --accept-data-loss && # 데이터베이스 상태를 Prisma에 반영
            npx prisma generate && # Prisma Client 재생성
            npm run build && 
            pm2 restart all
          "
          rm -f private_key.pem
